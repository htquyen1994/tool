# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AccessInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, active: int=None, default: int=None):  # noqa: E501
        """AccessInfo - a model defined in Swagger

        :param name: The name of this AccessInfo.  # noqa: E501
        :type name: str
        :param active: The active of this AccessInfo.  # noqa: E501
        :type active: int
        :param default: The default of this AccessInfo.  # noqa: E501
        :type default: int
        """
        self.swagger_types = {
            'name': str,
            'active': int,
            'default': int
        }

        self.attribute_map = {
            'name': 'name',
            'active': 'active',
            'default': 'default'
        }

        self._name = name
        self._active = active
        self._default = default

    @classmethod
    def from_dict(cls, dikt) -> 'AccessInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccessInfo of this AccessInfo.  # noqa: E501
        :rtype: AccessInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this AccessInfo.

        Access menu name  # noqa: E501

        :return: The name of this AccessInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AccessInfo.

        Access menu name  # noqa: E501

        :param name: The name of this AccessInfo.
        :type name: str
        """

        self._name = name

    @property
    def active(self) -> int:
        """Gets the active of this AccessInfo.

        0: disable, 1: enable  # noqa: E501

        :return: The active of this AccessInfo.
        :rtype: int
        """
        return self._active

    @active.setter
    def active(self, active: int):
        """Sets the active of this AccessInfo.

        0: disable, 1: enable  # noqa: E501

        :param active: The active of this AccessInfo.
        :type active: int
        """

        self._active = active

    @property
    def default(self) -> int:
        """Gets the default of this AccessInfo.

        0: no default, 1: default page  # noqa: E501

        :return: The default of this AccessInfo.
        :rtype: int
        """
        return self._default

    @default.setter
    def default(self, default: int):
        """Sets the default of this AccessInfo.

        0: no default, 1: default page  # noqa: E501

        :param default: The default of this AccessInfo.
        :type default: int
        """

        self._default = default
