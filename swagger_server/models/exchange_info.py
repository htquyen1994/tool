# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.coin_trade_info import CoinTradeInfo
from swagger_server import util


class ExchangeInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, coin_list: List[CoinTradeInfo]=None, amount_usdt: int=None):  # noqa: E501
        """ExchangeInfo - a model defined in Swagger

        :param code: The code of this ExchangeInfo.  # noqa: E501
        :type code: str
        :param coin_list: The coin_list of this ExchangeInfo.  # noqa: E501
        :type coin_list: List[CoinTradeInfo]
        :param amount_usdt: The amount_usdt of this ExchangeInfo.  # noqa: E501
        :type amount_usdt: int
        """
        self.swagger_types = {
            'code': str,
            'coin_list': List[CoinTradeInfo],
            'amount_usdt': int
        }

        self.attribute_map = {
            'code': 'code',
            'coin_list': 'coin_list',
            'amount_usdt': 'amount_usdt'
        }

        self._code = code
        self._coin_list = coin_list
        self._amount_usdt = amount_usdt

    @classmethod
    def from_dict(cls, dikt) -> 'ExchangeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExchangeInfo of this ExchangeInfo.  # noqa: E501
        :rtype: ExchangeInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> str:
        """Gets the code of this ExchangeInfo.

        Exchange code  # noqa: E501

        :return: The code of this ExchangeInfo.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this ExchangeInfo.

        Exchange code  # noqa: E501

        :param code: The code of this ExchangeInfo.
        :type code: str
        """

        self._code = code

    @property
    def coin_list(self) -> List[CoinTradeInfo]:
        """Gets the coin_list of this ExchangeInfo.


        :return: The coin_list of this ExchangeInfo.
        :rtype: List[CoinTradeInfo]
        """
        return self._coin_list

    @coin_list.setter
    def coin_list(self, coin_list: List[CoinTradeInfo]):
        """Sets the coin_list of this ExchangeInfo.


        :param coin_list: The coin_list of this ExchangeInfo.
        :type coin_list: List[CoinTradeInfo]
        """

        self._coin_list = coin_list

    @property
    def amount_usdt(self) -> int:
        """Gets the amount_usdt of this ExchangeInfo.

        Usdt  # noqa: E501

        :return: The amount_usdt of this ExchangeInfo.
        :rtype: int
        """
        return self._amount_usdt

    @amount_usdt.setter
    def amount_usdt(self, amount_usdt: int):
        """Sets the amount_usdt of this ExchangeInfo.

        Usdt  # noqa: E501

        :param amount_usdt: The amount_usdt of this ExchangeInfo.
        :type amount_usdt: int
        """

        self._amount_usdt = amount_usdt
